# Generated by Django 4.0.2 on 2022-03-14 11:52

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('group', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Members',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500, verbose_name='名字')),
                ('spouse', models.CharField(blank=True, max_length=100, null=True, verbose_name='配偶')),
                ('gender', models.CharField(choices=[('man', '男'), ('woman', '女')], default='man', max_length=8, verbose_name='性别')),
                ('avater', models.CharField(blank=True, max_length=500, null=True, verbose_name='头像')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='介绍')),
                ('birthday', models.CharField(blank=True, help_text='生日', max_length=500, null=True, verbose_name='生日')),
                ('festival_day', models.CharField(blank=True, help_text='祭日', max_length=500, null=True, verbose_name='祭日')),
                ('created_by', models.CharField(blank=True, help_text='创建人', max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, help_text='更新人', max_length=100, null=True, verbose_name='更新人')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groups', verbose_name='所属家族节点')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.members', verbose_name='父节点')),
            ],
            options={
                'verbose_name': '家族成员',
                'verbose_name_plural': '家族成员',
                'db_table': 'family_member',
                'ordering': ['id'],
                'permissions': [('add_groups', 'Can add 族谱族群'), ('view_groups', 'Can view 族谱族群'), ('delete_groups', 'Can delete 族谱族群'), ('change_groups', 'Can change 族谱族群')],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groups', verbose_name='所属家族节点')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '系统用户',
                'verbose_name_plural': '系统用户',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
